@use '@/styles/abstracts/variables' as v;

@function next-color($current-index) {
  $keys: map-keys($red-list);
  $currentIndex: index($keys, $current-index);

  @if $currentIndex and $currentIndex < length($keys) {
    @return map-get($red-list, nth($keys, $currentIndex + 1));
  }
  @return null;
}

$red-list: (
  '100': v.$red-100,
  '200': v.$red-200,
  '300': v.$red-300,
  '400': v.$red-400,
  '500': v.$red-500,
);

button {
  border: none;
  outline: none;
  cursor: pointer;
}

@mixin tag-red-style($bgColor) {
  color: v.$white;
  background-color: $bgColor;
  padding: 8px 12px;
  border-radius: 50px;
  font-size: v.$text-xs;
}

@mixin round-red-style($bgColor) {
  color: v.$white;
  background-color: $bgColor;
  padding: 4px 16px;
  border-radius: 50px;
  font-size: v.$text-sm;
  transition: all 0.3s;

  &:disabled {
    color: v.$gray;
    background-color: v.$light-gray;
    padding: 4px 16px;
  }
}

@mixin default-red-style($bgColor) {
  color: v.$white;
  background-color: $bgColor;
  padding: 6px 16px;
  font-size: v.$text-sm;
  transition: all 0.3s;

  &:disabled {
    color: v.$gray;
    background-color: v.$light-gray;
    padding: 6px 16px;
  }
}

@mixin large-red-style($bgColor) {
  color: v.$white;
  background-color: $bgColor;
  padding: 12px 32px;
  font-size: v.$text-sm;
  transition: all 0.3s;

  &:disabled {
    color: v.$gray;
    background-color: v.$light-gray;
    padding: 12px 32px;
  }
}

@mixin compact-red-style($bgColor) {
  color: v.$white;
  background-color: $bgColor;
  padding: 12px 32px;
  font-size: v.$text-sm;
  transition: all 0.3s;

  &:disabled {
    color: v.$gray;
    background-color: v.$light-gray;
    padding: 12px 32px;
  }
}

.tag-red {
  @each $index, $color in $red-list {
    &-#{$index} {
      @include tag-red-style($color);

      &:hover {
        background-color: next-color($index) or $color;
      }
    }
  }
}

.round-red {
  @each $index, $color in $red-list {
    &-#{$index} {
      @include round-red-style($color);

      &:hover {
        background-color: next-color($index) or $color;
      }
    }
  }
}

.default-red {
  @each $index, $color in $red-list {
    &-#{$index} {
      @include default-red-style($color);

      &:hover {
        background-color: next-color($index) or $color;
      }
    }
  }
}

.large-red {
  @each $index, $color in $red-list {
    &-#{$index} {
      @include large-red-style($color);

      &:hover {
        background-color: next-color($index) or $color;
      }
    }
  }
}

.conpact-red {
  @each $index, $color in $red-list {
    &-#{$index} {
      @include compact-red-style($color);

      &.full {
        width: 100%;
        height: 100%;
      }

      &:hover {
        background-color: next-color($index) or $color;
      }
    }
  }
}
