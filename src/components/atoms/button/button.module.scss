@function next-color($current-index) {
  $keys: map-keys($gray-list);
  $currentIndex: index($keys, $current-index);

  @if $currentIndex and $currentIndex < length($keys) {
    @return map-get($gray-list, nth($keys, $currentIndex + 1));
  }
  @return null;
}

$red-list: (
  '100': $red-100,
  '200': $red-200,
  '300': $red-300,
  '400': $red-400,
  '500': $red-500,
);

$gray-list: (
  '100': $gray-100,
  '200': $gray-200,
  '300': $gray-300,
);

button {
  border: none;
  outline: none;
  cursor: pointer;
}

@mixin tag-red-style($bgColor) {
  color: $white;
  background-color: $bgColor;
  padding: 8px 12px;
  border-radius: 50px;
  font-size: $--size-smalltext;
}

@mixin round-red-style($bgColor) {
  color: $white;
  background-color: $bgColor;
  padding: 4px 16px;
  border-radius: 50px;
  font-size: $--size-subtext;
  transition: all 0.3s;

  &:disabled {
    color: $gray;
    background-color: $light-gray;
    padding: 4px 16px;
  }
}

@mixin default-red-style($bgColor) {
  color: $white;
  background-color: $bgColor;
  padding: 6px 16px;
  font-size: $--size-subtext;
  transition: all 0.3s;

  &:disabled {
    color: $gray;
    background-color: $light-gray;
    padding: 6px 16px;
  }
}

@mixin default-gray-style($bgColor) {
  color: $white;
  background-color: $bgColor;
  padding: 6px 16px;
  font-size: $--size-subtext;
  transition: all 0.3s;

  &:disabled {
    color: $gray;
    background-color: $light-gray;
    padding: 6px 16px;
  }
}

@mixin large-red-style($bgColor) {
  color: $white;
  background-color: $bgColor;
  padding: 12px 32px;
  font-size: $--size-subtext;
  transition: all 0.3s;

  &:disabled {
    color: $gray;
    background-color: $light-gray;
    padding: 12px 32px;
  }
}

@mixin conpact-red-style($bgColor) {
  color: $white;
  background-color: $bgColor;
  padding: 12px 32px;
  font-size: $--size-subtext;
  transition: all 0.3s;

  &:disabled {
    color: $gray;
    background-color: $light-gray;
    padding: 12px 32px;
  }
}

.tag-red {
  @each $index, $color in $red-list {
    &-#{$index} {
      @include tag-red-style($color);

      &:hover {
        background-color: next-color($index) or $color;
      }
    }
  }
}

.round-red {
  @each $index, $color in $red-list {
    &-#{$index} {
      @include round-red-style($color);

      &:hover {
        background-color: next-color($index) or $color;
      }
    }
  }
}

.default-red {
  @each $index, $color in $red-list {
    &-#{$index} {
      @include default-red-style($color);

      &:hover {
        background-color: next-color($index) or $color;
      }
    }
  }
}

.default-gray {
  @each $index, $color in $gray-list {
    &-#{$index} {
      @include default-gray-style($color);
      padding: 0.8rem;
      border-radius: 4px;

      &:hover {
        background-color: next-color($index) or $color;
      }
    }
  }
}

.large-red {
  @each $index, $color in $red-list {
    &-#{$index} {
      @include large-red-style($color);

      &:hover {
        background-color: next-color($index) or $color;
      }
    }
  }
}

.conpact-red {
  @each $index, $color in $red-list {
    &-#{$index} {
      @include conpact-red-style($color);

      &.full {
        width: 100%;
        height: 100%;
      }

      &:hover {
        background-color: next-color($index) or $color;
      }
    }
  }
}
